{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kabash/Documents/shop-frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FormDiv, Button, Input } from './styledElements';\nimport { toastConfig } from './styledElements';\nimport styled from '@emotion/styled';\nimport { CheckSquare, XCircle } from 'react-feather';\nconst LoginButton = styled.button`\n        border: none;\n        border-bottom: solid 1px black;\n        outline: none;\n        cursor: pointer;\n        font-family: \"Roboto Condensed\", sans-serif;\n        background: none;\n        font-size: 16px;\n        transition: all 0.3s;\n        &:hover {\n            background-color: #212a31;\n            color: white;\n            transform: scale(1.2);\n            border: solid 1px white;\n            border-radius: 0.4rem;\n        }\n    `;\n_c = LoginButton;\nconst PasswordChecks = styled.div`\n        width: 320px;\n        height: 170px;\n        display: flex;\n        flex-direction: column;\n        row-gap: 0.7rem;\n        padding: 10px;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        background: linear-gradient(0.25turn, #cbd0d8, #f4f3ea);\n        border: none;\n        border-radius: 4px;\n    `;\n_c2 = PasswordChecks;\nconst Check = styled.div`\n        height: 1.5rem;\n        width: fit-content;\n        padding: 3px;\n        display: flex;\n        flex-direction: row;\n    `;\n_c3 = Check;\n\nfunction Register({\n  handleRegister\n}) {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const validate = (e, params) => {\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match.', toastConfig);\n    } else {\n      params = {\n        email,\n        password,\n        username\n      };\n      handleRegister(e, params);\n    }\n  };\n\n  const characterCountRegex = /.{8,}/;\n  const uppercaseRegex = /(?=.*?[A-Z])/;\n  const lowercaseRegex = /(?=.*?[a-z])/;\n  const specialCharacterRegex = /(?=.*?[#?!@$%^&*-])/;\n  const digitRegex = /(?=.*?[0-9])/;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        fontSize: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to Apple Shop \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n      style: {\n        top: '60px',\n        width: '340px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: validate,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), password && /*#__PURE__*/_jsxDEV(PasswordChecks, {\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            children: [characterCountRegex.test(password) ? /*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 63\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Check, {\n            children: [uppercaseRegex.test(password) ? /*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 58\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast one uppercase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Check, {\n            children: [digitRegex.test(password) ? /*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast one digit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Check, {\n            children: [specialCharacterRegex.test(password) ? /*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 65\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast one special character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"confirm\",\n          id: \"confirm\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), confirmPassword && /*#__PURE__*/_jsxDEV(PasswordChecks, {\n          style: {\n            height: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Check, {\n            children: [password === confirmPassword ? /*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 57\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: password === confirmPassword ? 'Passwords match' : 'Passwords do not match'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(LoginButton, {\n            children: \"Log in instead?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"dJ+ixt3cf9MMpJZnaxKZnwEJNLM=\");\n\n_c4 = Register;\nexport default Register;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LoginButton\");\n$RefreshReg$(_c2, \"PasswordChecks\");\n$RefreshReg$(_c3, \"Check\");\n$RefreshReg$(_c4, \"Register\");","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/components/Register.js"],"names":["React","useRef","Fragment","useState","useEffect","Link","toast","ToastContainer","FormDiv","Button","Input","toastConfig","styled","CheckSquare","XCircle","LoginButton","button","PasswordChecks","div","Check","Register","handleRegister","password","setPassword","email","setEmail","username","setUsername","confirmPassword","setConfirmPassword","validate","e","params","error","characterCountRegex","uppercaseRegex","lowercaseRegex","specialCharacterRegex","digitRegex","display","justifyContent","fontSize","top","width","target","value","test","marginRight","color","height"],"mappings":"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","sourcesContent":["import React, { useRef, Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {FormDiv, Button, Input} from './styledElements';\nimport { toastConfig } from './styledElements';\nimport styled from '@emotion/styled';\nimport { CheckSquare, XCircle } from 'react-feather';\n\nconst LoginButton = styled.button`\n        border: none;\n        border-bottom: solid 1px black;\n        outline: none;\n        cursor: pointer;\n        font-family: \"Roboto Condensed\", sans-serif;\n        background: none;\n        font-size: 16px;\n        transition: all 0.3s;\n        &:hover {\n            background-color: #212a31;\n            color: white;\n            transform: scale(1.2);\n            border: solid 1px white;\n            border-radius: 0.4rem;\n        }\n    `;\n\n    const PasswordChecks = styled.div`\n        width: 320px;\n        height: 170px;\n        display: flex;\n        flex-direction: column;\n        row-gap: 0.7rem;\n        padding: 10px;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        background: linear-gradient(0.25turn, #cbd0d8, #f4f3ea);\n        border: none;\n        border-radius: 4px;\n    `;\n\n    const Check = styled.div`\n        height: 1.5rem;\n        width: fit-content;\n        padding: 3px;\n        display: flex;\n        flex-direction: row;\n    `;\n\nfunction Register({handleRegister}) {\n\n\n    const [ password, setPassword ] = useState('');\n    const [ email, setEmail ] = useState('');\n    const [ username, setUsername ] = useState('');\n    const [ confirmPassword, setConfirmPassword ] = useState('');\n\n    const validate = (e, params) => {\n        if (password !== confirmPassword) {\n            toast.error('Passwords do not match.', toastConfig);\n        } else {\n            params = {email, password, username};\n            handleRegister(e, params);\n        }\n    }\n\n    const characterCountRegex = /.{8,}/;\n    const uppercaseRegex = /(?=.*?[A-Z])/;\n    const lowercaseRegex = /(?=.*?[a-z])/;\n    const specialCharacterRegex = /(?=.*?[#?!@$%^&*-])/;\n    const digitRegex = /(?=.*?[0-9])/;\n    \n    return (\n        <Fragment>\n            <ToastContainer/>\n            <div className=\"header\" style={{display: 'flex', justifyContent: 'center', fontSize: '24px'}}>\n            <h1 >Welcome to Apple Shop <i className=\"fab fa-apple\"></i></h1>\n            </div>\n            <FormDiv style={{top: '60px', width: '340px'}}>\n                <form onSubmit={validate}>\n                <Input type=\"text\" \n                name=\"username\" \n                id=\"username\" \n                placeholder=\"Username\" \n                value={username}\n                onChange={(e) => setUsername(e.target.value)}/>\n                <br/>\n                <Input type=\"email\" \n                name=\"email\" \n                id=\"email\" \n                placeholder=\"Email address\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                />\n                <br/>\n                <Input type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}/>\n                <br/>\n                {password && \n                <PasswordChecks>\n                    <Check>\n                        {characterCountRegex.test(password) ? <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        : <XCircle size={20} style={{marginRight: '0.5rem', color: 'red'}}/>}\n                        <span style={{fontSize: '14px'}}>Password must contain atleast 8 characters</span>\n                    </Check>\n                    <Check>\n                        {uppercaseRegex.test(password) ? <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        : <XCircle size={20} style={{marginRight: '0.5rem', color: 'red'}}/>}\n                        <span style={{fontSize: '14px'}}>Password must contain atleast one uppercase</span>\n                    </Check>\n                    <Check>\n                        {digitRegex.test(password) ? <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        : <XCircle size={20} style={{marginRight: '0.5rem', color: 'red'}}/>}\n                        <span style={{fontSize: '14px'}}>Password must contain atleast one digit</span>\n                    </Check>\n                    <Check>\n                        {specialCharacterRegex.test(password) ? <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        : <XCircle size={20} style={{marginRight: '0.5rem', color: 'red'}}/>}\n                        <span style={{fontSize: '14px'}}>Password must contain atleast one special character</span>\n                    </Check>\n                </PasswordChecks>}\n                <Input type=\"password\" \n                name=\"confirm\" \n                id=\"confirm\" \n                placeholder=\"Confirm Password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}/>\n                <br/>\n                {confirmPassword && \n                <PasswordChecks style={{height: 'auto'}}>\n                    <Check>\n                        {password === confirmPassword ? <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        : <XCircle size={20} style={{marginRight: '0.5rem', color: 'red'}}/>}\n                        <span style={{fontSize: '14px'}}>{password === confirmPassword ? 'Passwords match' : 'Passwords do not match'}</span>\n                    </Check>    \n                </PasswordChecks>}\n                <Button type=\"submit\">Register</Button>\n                </form>\n                <footer><Link to='/'><LoginButton>Log in instead?</LoginButton></Link></footer>\n            </FormDiv>\n        </Fragment>\n    )\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}