{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kabash/Documents/shop-frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FormDiv, Button, Input } from './styledElements';\nimport { toastConfig } from './styledElements';\nimport styled from '@emotion/styled';\nimport { CheckSquare, XCircle } from 'react-feather';\nconst LoginButton = styled.button`\n        border: none;\n        border-bottom: solid 1px black;\n        outline: none;\n        cursor: pointer;\n        font-family: \"Roboto Condensed\", sans-serif;\n        background: none;\n        font-size: 16px;\n        transition: all 0.3s;\n        &:hover {\n            background-color: #212a31;\n            color: white;\n            transform: scale(1.2);\n            border: solid 1px white;\n            border-radius: 0.4rem;\n        }\n    `;\n_c = LoginButton;\nconst PasswordChecks = styled.div`\n        width: 250px;\n        height: 170px;\n        display: flex;\n        flex-direction: column;\n        row-gap: 0.7rem;\n        padding: 10px;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        background: linear-gradient(0.25turn, #cbd0d8, #f4f3ea);\n        border: none;\n        border-radius: 4px;\n    `;\n_c2 = PasswordChecks;\nconst Check = styled.div`\n        height: 1.5rem;\n        width: fit-content;\n        padding: 3px;\n        display: flex;\n        flex-direction: row;\n    `;\n_c3 = Check;\n\nfunction Register({\n  handleRegister\n}) {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const emailRef = useRef('');\n  const confirmPasswordRef = useRef('');\n  const usernameRef = useRef('');\n\n  const validate = (e, params) => {\n    if (password !== confirmPasswordRef.current.value) {\n      toast.error('Passwords do not match.', toastConfig);\n    } else {\n      params = {\n        email: emailRef.current.value,\n        password,\n        username: usernameRef.current.value\n      };\n      handleRegister(e, params);\n    }\n  };\n\n  const characterCountRegex = /.{8,}/;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        fontSize: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome to Apple Shop \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n      style: {\n        top: '60px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: validate,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          placeholder: \"Username\",\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email address\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\" //ref={passwordRef}\n          ,\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PasswordChecks, {\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            children: [characterCountRegex.test(password) ? /*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 63\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Check, {\n            children: [/*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast one uppercase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Check, {\n            children: [/*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast one lowercase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Check, {\n            children: [/*#__PURE__*/_jsxDEV(CheckSquare, {\n              size: 20,\n              style: {\n                marginRight: '0.5rem',\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: \"Password must contain atleast one special character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"confirm\",\n          id: \"confirm\",\n          placeholder: \"Confirm Password\",\n          ref: confirmPasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(LoginButton, {\n            children: \"Log in instead?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"31C1sPkFYWPqQvh9ntvsg/AduUA=\");\n\n_c4 = Register;\nexport default Register;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LoginButton\");\n$RefreshReg$(_c2, \"PasswordChecks\");\n$RefreshReg$(_c3, \"Check\");\n$RefreshReg$(_c4, \"Register\");","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/components/Register.js"],"names":["React","useRef","Fragment","useState","Link","toast","ToastContainer","FormDiv","Button","Input","toastConfig","styled","CheckSquare","XCircle","LoginButton","button","PasswordChecks","div","Check","Register","handleRegister","password","setPassword","emailRef","confirmPasswordRef","usernameRef","validate","e","params","current","value","error","email","username","characterCountRegex","display","justifyContent","fontSize","top","target","test","marginRight","color"],"mappings":"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","sourcesContent":["import React, { useRef, Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {FormDiv, Button, Input} from './styledElements';\nimport { toastConfig } from './styledElements';\nimport styled from '@emotion/styled';\nimport { CheckSquare, XCircle } from 'react-feather';\n\nconst LoginButton = styled.button`\n        border: none;\n        border-bottom: solid 1px black;\n        outline: none;\n        cursor: pointer;\n        font-family: \"Roboto Condensed\", sans-serif;\n        background: none;\n        font-size: 16px;\n        transition: all 0.3s;\n        &:hover {\n            background-color: #212a31;\n            color: white;\n            transform: scale(1.2);\n            border: solid 1px white;\n            border-radius: 0.4rem;\n        }\n    `;\n\n    const PasswordChecks = styled.div`\n        width: 250px;\n        height: 170px;\n        display: flex;\n        flex-direction: column;\n        row-gap: 0.7rem;\n        padding: 10px;\n        margin-top: 5px;\n        margin-bottom: 5px;\n        background: linear-gradient(0.25turn, #cbd0d8, #f4f3ea);\n        border: none;\n        border-radius: 4px;\n    `;\n\n    const Check = styled.div`\n        height: 1.5rem;\n        width: fit-content;\n        padding: 3px;\n        display: flex;\n        flex-direction: row;\n    `;\n\nfunction Register({handleRegister}) {\n\n\n    const [password, setPassword ] = useState('');\n\n    const emailRef = useRef('');\n    const confirmPasswordRef = useRef('');\n    const usernameRef = useRef('');\n\n    const validate = (e, params) => {\n        if (password !== confirmPasswordRef.current.value) {\n            toast.error('Passwords do not match.', toastConfig);\n        } else {\n            params = {email: emailRef.current.value, password, username: usernameRef.current.value};\n            handleRegister(e, params);\n        }\n    }\n\n    const characterCountRegex = /.{8,}/;\n\n    return (\n        <Fragment>\n            <ToastContainer/>\n            <div className=\"header\" style={{display: 'flex', justifyContent: 'center', fontSize: '24px'}}>\n            <h1 >Welcome to Apple Shop <i className=\"fab fa-apple\"></i></h1>\n            </div>\n            <FormDiv style={{top: '60px'}}>\n                <form onSubmit={validate}>\n                <Input type=\"text\" \n                name=\"username\" \n                id=\"username\" \n                placeholder=\"Username\" \n                ref={usernameRef}/>\n                <br/>\n                <Input type=\"email\" \n                name=\"email\" \n                id=\"email\" \n                placeholder=\"Email address\" \n                ref={emailRef}/>\n                <br/>\n                <Input type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                placeholder=\"Password\"\n                //ref={passwordRef}\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}/>\n                <br/>\n                <PasswordChecks>\n                    <Check>\n                        {characterCountRegex.test(password) ? <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                         : <XCircle size={20} style={{marginRight: '0.5rem', color: 'red'}}/>}\n                        <span style={{fontSize: '14px'}}>Password must contain atleast 8 characters</span>\n                    </Check>\n                    <Check>\n                        <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        <span style={{fontSize: '14px'}}>Password must contain atleast one uppercase</span>\n                    </Check>\n                    <Check>\n                        <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        <span style={{fontSize: '14px'}}>Password must contain atleast one lowercase</span>\n                    </Check>\n                    <Check>\n                        <CheckSquare size={20} style={{marginRight: '0.5rem', color: 'green'}}/>\n                        <span style={{fontSize: '14px'}}>Password must contain atleast one special character</span>\n                    </Check>\n                </PasswordChecks>\n                <Input type=\"password\" \n                name=\"confirm\" \n                id=\"confirm\" \n                placeholder=\"Confirm Password\"\n                ref={confirmPasswordRef}/>\n                <br/>\n                <Button type=\"submit\">Register</Button>\n                </form>\n                <footer><Link to='/'><LoginButton>Log in instead?</LoginButton></Link></footer>\n            </FormDiv>\n        </Fragment>\n    )\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}