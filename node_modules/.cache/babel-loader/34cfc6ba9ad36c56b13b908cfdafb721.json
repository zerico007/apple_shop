{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kabash/Documents/shop-frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Register() {\n  _s();\n\n  const FormDiv = styled.div`\n        top: 200px;\n        margin-left: auto;\n        margin-right: auto;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        width: 350px;\n        border: solid 2px black;\n        border-radius: 0.3rem;\n        padding: 20px;\n    `;\n  const Input = styled.input`\n        height: 1.5em;\n        width: 150px;\n        border-bottom: 2px solid gray;\n        margin-top: 10px;\n        margin-bottom: 10px;\n        padding: 5px;\n        font-family: \"Roboto Condensed\", sans-serif;\n        font-size: 16px;\n        border-top: none;\n        border-left: none;\n        border-right: none;\n    `;\n  const Button = styled.button`\n        height: 2.5em;\n        font-size: 16px;\n        width: 100px;\n        padding: 5px;\n        margin-top: 10px;\n        margin-bottom: 15px;\n        color: white;\n        background-color: #36454f;\n        &:hover {\n            background-color: #171d22;\n            transform: scale(1.1);\n        }\n        outline: none;\n        cursor: pointer;\n        &:active {\n            transform: translateY(4px);\n        }\n        border-radius: 0.4rem;\n        font-family: \"Roboto Condensed\", sans-serif;\n        font-weight: 700;\n        border: none;\n    `;\n  const toastConfig = {\n    position: \"top-center\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true\n  };\n  const emailRef = useRef('');\n  const passwordRef = useRef('');\n  const confirmPasswordRef = useRef('');\n\n  const validate = (e, params) => {\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n      toast.error('Passwords do not match.', toastConfig);\n    } else {\n      params = {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      };\n      handleRegister(e, params);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email address\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"confirm\",\n          id: \"confirm\",\n          placeholder: \"Confirm Password\",\n          ref: confirmPasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"Ha/vDb/X2DFdWNJSov7sWo4E1l0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/components/Register.js"],"names":["React","useRef","Fragment","styled","toast","ToastContainer","Register","FormDiv","div","Input","input","Button","button","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","emailRef","passwordRef","confirmPasswordRef","validate","e","params","current","value","error","email","password","handleRegister"],"mappings":"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","sourcesContent":["import React, { useRef, Fragment } from 'react';\nimport styled from '@emotion/styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Register() {\n\n    const FormDiv = styled.div`\n        top: 200px;\n        margin-left: auto;\n        margin-right: auto;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        width: 350px;\n        border: solid 2px black;\n        border-radius: 0.3rem;\n        padding: 20px;\n    `;\n\n    const Input = styled.input`\n        height: 1.5em;\n        width: 150px;\n        border-bottom: 2px solid gray;\n        margin-top: 10px;\n        margin-bottom: 10px;\n        padding: 5px;\n        font-family: \"Roboto Condensed\", sans-serif;\n        font-size: 16px;\n        border-top: none;\n        border-left: none;\n        border-right: none;\n    `;\n\n    const Button = styled.button`\n        height: 2.5em;\n        font-size: 16px;\n        width: 100px;\n        padding: 5px;\n        margin-top: 10px;\n        margin-bottom: 15px;\n        color: white;\n        background-color: #36454f;\n        &:hover {\n            background-color: #171d22;\n            transform: scale(1.1);\n        }\n        outline: none;\n        cursor: pointer;\n        &:active {\n            transform: translateY(4px);\n        }\n        border-radius: 0.4rem;\n        font-family: \"Roboto Condensed\", sans-serif;\n        font-weight: 700;\n        border: none;\n    `;\n\n    const toastConfig = {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n    }\n\n    const emailRef = useRef('');\n    const passwordRef = useRef('');\n    const confirmPasswordRef = useRef('');\n\n    const validate = (e, params) => {\n        if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n            toast.error('Passwords do not match.', toastConfig);\n        } else {\n            params = {email: emailRef.current.value, password: passwordRef.current.value};\n            handleRegister(e, params);\n        }\n    }\n\n    return (\n        <Fragment>\n            <ToastContainer/>\n            <FormDiv>\n                <form>\n                <Input type=\"email\" \n                name=\"email\" \n                id=\"email\" \n                placeholder=\"Email address\" \n                ref={emailRef}/>\n                <br/>\n                <Input type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                placeholder=\"Password\"\n                ref={passwordRef}/>\n                <br/>\n                <Input type=\"password\" \n                name=\"confirm\" \n                id=\"confirm\" \n                placeholder=\"Confirm Password\"\n                ref={confirmPasswordRef}/>\n                <br/>\n                <Button type=\"submit\">Register</Button>\n                </form>\n            </FormDiv>\n        </Fragment>\n    )\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}