{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nimport jwt_decode from \"jwt-decode\";\nconst shopApiInstance = axios.create({\n  baseURL: window.env.SHOP_REST_API_BASE_URL\n});\n\nconst setBearerToken = token => {\n  shopApiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  console.log(`Set bearer token, ${token}`);\n};\n\nconst isTokenExpired = token => {\n  const decodedToken = jwt_decode(token);\n  const {\n    exp\n  } = decodedToken;\n\n  if (exp * 1000 < Date.now()) {\n    console.warn('token expired');\n  }\n};\n\nexport { shopApiInstance, setBearerToken, isTokenExpired };","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/network.js"],"names":["axios","moment","jwt_decode","shopApiInstance","create","baseURL","window","env","SHOP_REST_API_BASE_URL","setBearerToken","token","defaults","headers","common","console","log","isTokenExpired","decodedToken","exp","Date","now","warn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,eAAe,GAAGH,KAAK,CAACI,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAEC,MAAM,CAACC,GAAP,CAAWC;AADa,CAAb,CAAxB;;AAKA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC5BP,EAAAA,eAAe,CAACQ,QAAhB,CAAyBC,OAAzB,CAAiCC,MAAjC,CAAwC,eAAxC,IAA4D,UAASH,KAAM,EAA3E;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBL,KAAM,EAAvC;AACH,CAHD;;AAKA,MAAMM,cAAc,GAAGN,KAAK,IAAI;AAC5B,QAAMO,YAAY,GAAGf,UAAU,CAACQ,KAAD,CAA/B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUD,YAAhB;;AACA,MAAIC,GAAG,GAAG,IAAN,GAAaC,IAAI,CAACC,GAAL,EAAjB,EAA6B;AACzBN,IAAAA,OAAO,CAACO,IAAR,CAAa,eAAb;AACH;AACJ,CAND;;AAQA,SAAQlB,eAAR,EAAyBM,cAAzB,EAAyCO,cAAzC","sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\nimport jwt_decode from \"jwt-decode\";\n\nconst shopApiInstance = axios.create({\n    baseURL: window.env.SHOP_REST_API_BASE_URL\n\n});\n\nconst setBearerToken = token => {\n    shopApiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    console.log(`Set bearer token, ${token}`);\n}\n\nconst isTokenExpired = token => {\n    const decodedToken = jwt_decode(token);\n    const { exp } = decodedToken;\n    if (exp * 1000 < Date.now()) {\n        console.warn('token expired')\n    }\n}\n\nexport {shopApiInstance, setBearerToken, isTokenExpired};"]},"metadata":{},"sourceType":"module"}