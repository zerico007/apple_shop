{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kabash/Documents/shop-frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, Fragment } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FormDiv, Button, Input } from './styledElements';\n\nfunction Register({\n  handleRegister\n}) {\n  _s();\n\n  const toastConfig = {\n    position: \"top-center\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true\n  };\n  const emailRef = useRef('');\n  const passwordRef = useRef('');\n  const confirmPasswordRef = useRef('');\n\n  const validate = (e, params) => {\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n      toast.error('Passwords do not match.', toastConfig);\n    } else {\n      params = {\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      };\n      handleRegister(e, params);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: validate,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email address\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"confirm\",\n          id: \"confirm\",\n          placeholder: \"Confirm Password\",\n          ref: confirmPasswordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"Ha/vDb/X2DFdWNJSov7sWo4E1l0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/components/Register.js"],"names":["React","useRef","Fragment","toast","ToastContainer","FormDiv","Button","Input","Register","handleRegister","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","emailRef","passwordRef","confirmPasswordRef","validate","e","params","current","value","error","email","password"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAqC,kBAArC;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAoC;AAAA;;AAEhC,QAAMC,WAAW,GAAG;AAChBC,IAAAA,QAAQ,EAAE,YADM;AAEhBC,IAAAA,SAAS,EAAE,IAFK;AAGhBC,IAAAA,eAAe,EAAE,KAHD;AAIhBC,IAAAA,YAAY,EAAE,IAJE;AAKhBC,IAAAA,YAAY,EAAE;AALE,GAApB;AAQA,QAAMC,QAAQ,GAAGf,MAAM,CAAC,EAAD,CAAvB;AACA,QAAMgB,WAAW,GAAGhB,MAAM,CAAC,EAAD,CAA1B;AACA,QAAMiB,kBAAkB,GAAGjB,MAAM,CAAC,EAAD,CAAjC;;AAEA,QAAMkB,QAAQ,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAC5B,QAAIJ,WAAW,CAACK,OAAZ,CAAoBC,KAApB,KAA8BL,kBAAkB,CAACI,OAAnB,CAA2BC,KAA7D,EAAoE;AAChEpB,MAAAA,KAAK,CAACqB,KAAN,CAAY,yBAAZ,EAAuCd,WAAvC;AACH,KAFD,MAEO;AACHW,MAAAA,MAAM,GAAG;AAACI,QAAAA,KAAK,EAAET,QAAQ,CAACM,OAAT,CAAiBC,KAAzB;AAAgCG,QAAAA,QAAQ,EAAET,WAAW,CAACK,OAAZ,CAAoBC;AAA9D,OAAT;AACAd,MAAAA,cAAc,CAACW,CAAD,EAAIC,MAAJ,CAAd;AACH;AACJ,GAPD;;AASA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEF,QAAhB;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AACA,UAAA,IAAI,EAAC,OADL;AAEA,UAAA,EAAE,EAAC,OAFH;AAGA,UAAA,WAAW,EAAC,eAHZ;AAIA,UAAA,GAAG,EAAEH;AAJL;AAAA;AAAA;AAAA;AAAA,gBADA,eAMA;AAAA;AAAA;AAAA;AAAA,gBANA,eAOA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AACA,UAAA,IAAI,EAAC,UADL;AAEA,UAAA,EAAE,EAAC,UAFH;AAGA,UAAA,WAAW,EAAC,UAHZ;AAIA,UAAA,GAAG,EAAEC;AAJL;AAAA;AAAA;AAAA;AAAA,gBAPA,eAYA;AAAA;AAAA;AAAA;AAAA,gBAZA,eAaA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AACA,UAAA,IAAI,EAAC,SADL;AAEA,UAAA,EAAE,EAAC,SAFH;AAGA,UAAA,WAAW,EAAC,kBAHZ;AAIA,UAAA,GAAG,EAAEC;AAJL;AAAA;AAAA;AAAA;AAAA,gBAbA,eAkBA;AAAA;AAAA;AAAA;AAAA,gBAlBA,eAmBA,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GApDQV,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, { useRef, Fragment } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {FormDiv, Button, Input} from './styledElements';\n\nfunction Register({handleRegister}) {\n\n    const toastConfig = {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n    }\n\n    const emailRef = useRef('');\n    const passwordRef = useRef('');\n    const confirmPasswordRef = useRef('');\n\n    const validate = (e, params) => {\n        if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n            toast.error('Passwords do not match.', toastConfig);\n        } else {\n            params = {email: emailRef.current.value, password: passwordRef.current.value};\n            handleRegister(e, params);\n        }\n    }\n\n    return (\n        <Fragment>\n            <ToastContainer/>\n            <FormDiv>\n                <form onSubmit={validate}>\n                <Input type=\"email\" \n                name=\"email\" \n                id=\"email\" \n                placeholder=\"Email address\" \n                ref={emailRef}/>\n                <br/>\n                <Input type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                placeholder=\"Password\"\n                ref={passwordRef}/>\n                <br/>\n                <Input type=\"password\" \n                name=\"confirm\" \n                id=\"confirm\" \n                placeholder=\"Confirm Password\"\n                ref={confirmPasswordRef}/>\n                <br/>\n                <Button type=\"submit\">Register</Button>\n                </form>\n            </FormDiv>\n        </Fragment>\n    )\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}