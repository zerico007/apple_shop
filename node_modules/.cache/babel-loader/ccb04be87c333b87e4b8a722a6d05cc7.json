{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nconst shopApiInstance = axios.create({\n  baseURL: window.env.SHOP_REST_API_BASE_URL\n});\nshopApiInstance.interceptors.response.use(response => {\n  let newAccessToken; //const currentDecodedToken = jwt_decode(shopApiInstance.defaults.headers.common['Authorization'].split(' '[1]));\n  //console.info(currentDecodedToken)\n  // if (response.headers['shop-refreshed-access-token']){\n  //     newAccessToken = response.headers['shop-refreshed-access-token']\n  //     setBearerToken(newAccessToken);\n  //     console.info('renewed access token')\n  // }\n\n  const currentToken = shopApiInstance.defaults.headers.common['Authorization'] && shopApiInstance.defaults.headers.common['Authorization'].split(' ')[1];\n  currentToken && console.log(currentToken);\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst setBearerToken = token => {\n  shopApiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  console.log(`Set bearer token, ${token}`);\n};\n\nconst isUserExpired = exp => {\n  if (exp * 1000 < Date.now()) {\n    console.warn('token expired'); //tokenCheckInterceptor();\n  }\n};\n\nexport { shopApiInstance, setBearerToken, isUserExpired };","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/network.js"],"names":["axios","jwt_decode","shopApiInstance","create","baseURL","window","env","SHOP_REST_API_BASE_URL","interceptors","response","use","newAccessToken","currentToken","defaults","headers","common","split","console","log","error","Promise","reject","setBearerToken","token","isUserExpired","exp","Date","now","warn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAEC,MAAM,CAACC,GAAP,CAAWC;AADa,CAAb,CAAxB;AAKAL,eAAe,CAACM,YAAhB,CAA6BC,QAA7B,CAAsCC,GAAtC,CACID,QAAQ,IAAI;AACZ,MAAIE,cAAJ,CADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,YAAY,GAAGV,eAAe,CAACW,QAAhB,CAAyBC,OAAzB,CAAiCC,MAAjC,CAAwC,eAAxC,KAA4Db,eAAe,CAACW,QAAhB,CAAyBC,OAAzB,CAAiCC,MAAjC,CAAwC,eAAxC,EAAyDC,KAAzD,CAA+D,GAA/D,EAAoE,CAApE,CAAjF;AACAJ,EAAAA,YAAY,IAAIK,OAAO,CAACC,GAAR,CAAYN,YAAZ,CAAhB;AACA,SAAOH,QAAP;AACD,CAbH,EAcEU,KAAK,IAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBH;;AAkBA,MAAMG,cAAc,GAAGC,KAAK,IAAI;AAC5BrB,EAAAA,eAAe,CAACW,QAAhB,CAAyBC,OAAzB,CAAiCC,MAAjC,CAAwC,eAAxC,IAA4D,UAASQ,KAAM,EAA3E;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBK,KAAM,EAAvC;AACH,CAHD;;AAKA,MAAMC,aAAa,GAAGC,GAAG,IAAI;AACzB,MAAIA,GAAG,GAAG,IAAN,GAAaC,IAAI,CAACC,GAAL,EAAjB,EAA6B;AACzBV,IAAAA,OAAO,CAACW,IAAR,CAAa,eAAb,EADyB,CAEzB;AACH;AACJ,CALD;;AAOA,SAAQ1B,eAAR,EAAyBoB,cAAzB,EAAyCE,aAAzC","sourcesContent":["import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst shopApiInstance = axios.create({\n    baseURL: window.env.SHOP_REST_API_BASE_URL\n\n});\n\nshopApiInstance.interceptors.response.use(\n    response => {\n    let newAccessToken;\n    //const currentDecodedToken = jwt_decode(shopApiInstance.defaults.headers.common['Authorization'].split(' '[1]));\n    //console.info(currentDecodedToken)\n    // if (response.headers['shop-refreshed-access-token']){\n    //     newAccessToken = response.headers['shop-refreshed-access-token']\n    //     setBearerToken(newAccessToken);\n    //     console.info('renewed access token')\n    // }\n    const currentToken = shopApiInstance.defaults.headers.common['Authorization'] && shopApiInstance.defaults.headers.common['Authorization'].split(' ')[1]\n    currentToken && console.log(currentToken)\n    return response;\n  }, \n  error => {\n    return Promise.reject(error);\n  });\n\nconst setBearerToken = token => {\n    shopApiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    console.log(`Set bearer token, ${token}`);\n}\n\nconst isUserExpired = exp => {\n    if (exp * 1000 < Date.now()) {\n        console.warn('token expired')\n        //tokenCheckInterceptor();\n    }\n}\n\nexport {shopApiInstance, setBearerToken, isUserExpired};"]},"metadata":{},"sourceType":"module"}