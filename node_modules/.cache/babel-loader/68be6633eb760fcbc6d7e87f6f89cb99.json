{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kabash/Documents/shop-frontend/src/components/PasswordUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { FormDiv, Button, Input } from './styledElements';\nimport { toastConfig } from './styledElements';\nimport { toast, ToastContainer } from 'react-toastify';\n\nfunction PasswordUpdate({\n  user,\n  updatePassword\n}) {\n  _s();\n\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handlePasswordUpdate = e => {\n    e.preventDefault();\n\n    if (confirmPassword !== newPassword) {\n      return toast.error('Passwords do not match', toastConfig);\n    }\n\n    const params = {\n      password: user.password,\n      newPassword,\n      currentPassword\n    };\n    console.log(params);\n    updatePassword(e, params);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormDiv, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordUpdate,\n      className: \"password-update\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: currentPassword,\n        type: \"password\",\n        name: \"currentPassword\",\n        id: \"currentPassword\",\n        placeholder: \"Enter current password\",\n        onChange: e => setCurrentPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: newPassword,\n        type: \"password\",\n        name: \"newPassword\",\n        id: \"newPassword\",\n        placeholder: \"Enter new password\",\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: confirmPassword,\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        placeholder: \"Reenter new password\",\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: {\n          width: '180px'\n        },\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordUpdate, \"Uh3hvULS/eg4CDDby9NHUxK6pEk=\");\n\n_c = PasswordUpdate;\nexport default PasswordUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordUpdate\");","map":{"version":3,"sources":["/Users/kabash/Documents/shop-frontend/src/components/PasswordUpdate.js"],"names":["React","useRef","useState","FormDiv","Button","Input","toastConfig","toast","ToastContainer","PasswordUpdate","user","updatePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handlePasswordUpdate","e","preventDefault","error","params","password","console","log","target","value","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAqC,kBAArC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAxB,EAAgD;AAAA;;AAE5C,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAAEY,WAAF,EAAeC,cAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAEc,eAAF,EAAmBC,kBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMgB,oBAAoB,GAAGC,CAAC,IAAI;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGJ,eAAe,KAAKF,WAAvB,EAAoC;AAChC,aAAOP,KAAK,CAACc,KAAN,CAAY,wBAAZ,EAAsCf,WAAtC,CAAP;AACH;;AACD,UAAMgB,MAAM,GAAG;AACXC,MAAAA,QAAQ,EAAEb,IAAI,CAACa,QADJ;AAEXT,MAAAA,WAFW;AAGXF,MAAAA;AAHW,KAAf;AAKAY,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAX,IAAAA,cAAc,CAACQ,CAAD,EAAIG,MAAJ,CAAd;AAEH,GAbD;;AAeA,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEJ,oBAAhB;AAAsC,MAAA,SAAS,EAAC,iBAAhD;AAAA,8BACA,QAAC,KAAD;AACA,QAAA,KAAK,EAAEN,eADP;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,IAAI,EAAC,iBAHL;AAIA,QAAA,EAAE,EAAC,iBAJH;AAKA,QAAA,WAAW,EAAC,wBALZ;AAMA,QAAA,QAAQ,EAAGO,CAAD,IAAON,kBAAkB,CAACM,CAAC,CAACO,MAAF,CAASC,KAAV,CANnC;AAOA,QAAA,QAAQ;AAPR;AAAA;AAAA;AAAA;AAAA,cADA,eASA,QAAC,KAAD;AACA,QAAA,KAAK,EAAEb,WADP;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,IAAI,EAAC,aAHL;AAIA,QAAA,EAAE,EAAC,aAJH;AAKA,QAAA,WAAW,EAAC,oBALZ;AAMA,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAN/B;AAOA,QAAA,QAAQ;AAPR;AAAA;AAAA;AAAA;AAAA,cATA,eAiBA,QAAC,KAAD;AACA,QAAA,KAAK,EAAEX,eADP;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,IAAI,EAAC,iBAHL;AAIA,QAAA,EAAE,EAAC,iBAJH;AAKA,QAAA,WAAW,EAAC,sBALZ;AAMA,QAAA,QAAQ,EAAGG,CAAD,IAAOF,kBAAkB,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CANnC;AAOA,QAAA,QAAQ;AAPR;AAAA;AAAA;AAAA;AAAA,cAjBA,eAyBA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GArDQnB,c;;KAAAA,c;AAuDT,eAAeA,cAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {FormDiv, Button, Input} from './styledElements';\nimport { toastConfig } from './styledElements'; \nimport { toast, ToastContainer } from 'react-toastify';\n\nfunction PasswordUpdate({user, updatePassword}) {\n\n    const [ currentPassword, setCurrentPassword ] = useState('');\n    const [ newPassword, setNewPassword ] = useState('');\n    const [ confirmPassword, setConfirmPassword ] = useState('')\n\n    const handlePasswordUpdate = e => {\n        e.preventDefault();\n        if(confirmPassword !== newPassword) {\n            return toast.error('Passwords do not match', toastConfig);\n        }\n        const params = {\n            password: user.password, \n            newPassword, \n            currentPassword\n        };\n        console.log(params);\n        updatePassword(e, params);\n\n    }\n\n    return (\n        <FormDiv>\n            <ToastContainer/>\n            <form onSubmit={handlePasswordUpdate} className=\"password-update\">\n            <Input \n            value={currentPassword}\n            type='password' \n            name='currentPassword' \n            id='currentPassword' \n            placeholder='Enter current password' \n            onChange={(e) => setCurrentPassword(e.target.value)}\n            required/>\n            <Input \n            value={newPassword} \n            type='password' \n            name='newPassword' \n            id='newPassword' \n            placeholder='Enter new password' \n            onChange={(e) => setNewPassword(e.target.value)}\n            required/>\n            <Input \n            value={confirmPassword} \n            type='password' \n            name='confirmPassword' \n            id='confirmPassword' \n            placeholder='Reenter new password' \n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required/>\n            <Button type='submit' style={{width: '180px'}} >Update Password</Button>\n            </form>\n        </FormDiv>\n    )\n}\n\nexport default PasswordUpdate;"]},"metadata":{},"sourceType":"module"}